From d43c0229efb42913a0902ee42817e3a928598587 Mon Sep 17 00:00:00 2001
From: Dmitry Timoshkov <dmitry@baikal.ru>
Date: Sun, 17 Apr 2016 20:06:46 +0800
Subject: kernel32: GetShortPathName should fail when called with a wildcard.

This patch fixes heap corruption reported in the bug 39355.
---
 dlls/kernel32/path.c       | 10 +++++++++-
 dlls/kernel32/tests/path.c |  2 --
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/dlls/kernel32/path.c b/dlls/kernel32/path.c
index a906acc..ecebab2 100644
--- a/dlls/kernel32/path.c
+++ b/dlls/kernel32/path.c
@@ -43,6 +43,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(file);
 
 #define MAX_PATHNAME_LEN        1024
 
+static const WCHAR wildcardsW[] = {'*','?',0};
 
 /* check if a file name is for an executable file (.exe or .com) */
 static inline BOOL is_executable( const WCHAR *name )
@@ -455,7 +456,7 @@ DWORD WINAPI GetShortPathNameW( LPCWSTR longpath, LPWSTR shortpath, DWORD shortl
     WIN32_FIND_DATAW    wfd;
     HANDLE              goit;
 
-    TRACE("%s\n", debugstr_w(longpath));
+    TRACE("%s,%p,%u\n", debugstr_w(longpath), shortpath, shortlen);
 
     if (!longpath)
     {
@@ -484,6 +485,13 @@ DWORD WINAPI GetShortPathNameW( LPCWSTR longpath, LPWSTR shortpath, DWORD shortl
         sp = lp = 4;
     }
 
+    if (strpbrkW(longpath + lp, wildcardsW))
+    {
+        HeapFree(GetProcessHeap(), 0, tmpshortpath);
+        SetLastError(ERROR_INVALID_NAME);
+        return 0;
+    }
+
     /* check for drive letter */
     if (longpath[lp] != '/' && longpath[lp + 1] == ':' )
     {
diff --git a/dlls/kernel32/tests/path.c b/dlls/kernel32/tests/path.c
index 0dc8802..3934046 100644
--- a/dlls/kernel32/tests/path.c
+++ b/dlls/kernel32/tests/path.c
@@ -1461,9 +1461,7 @@ static void test_GetShortPathNameW(void)
     lstrcpyW(ptr, wildW);
     SetLastError(0xdeadbeef);
     length = GetShortPathNameW( path, short_path, sizeof(short_path)/sizeof(*short_path) );
-todo_wine
     ok(!length, "GetShortPathNameW should fail\n");
-todo_wine
     ok(GetLastError() == ERROR_INVALID_NAME, "wrong error %d\n", GetLastError());
 
     lstrcpyW(ptr, a_bcdeW);
-- 
2.7.1

