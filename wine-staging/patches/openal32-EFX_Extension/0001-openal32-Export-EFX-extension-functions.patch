From 4853f2c3b243c55f20a4f403cc9e2407a051d1c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Tue, 28 Jul 2015 05:44:11 +0200
Subject: openal32: Export EFX extension functions.

---
 dlls/openal32/openal.c      | 44 ++++++++++++++++++++++----------------------
 dlls/openal32/openal32.spec | 23 +++++++++++++++++++++++
 2 files changed, 45 insertions(+), 22 deletions(-)

diff --git a/dlls/openal32/openal.c b/dlls/openal32/openal.c
index 5a4e1e7..d266f12 100644
--- a/dlls/openal32/openal.c
+++ b/dlls/openal32/openal.c
@@ -647,113 +647,113 @@ ALvoid CDECL wine_alSpeedOfSound(ALfloat value)
 }
 
 /* OpenAL EFX extension functions */
-static ALvoid CDECL wine_alGenFilters(ALsizei n, ALuint* filters)
+ALvoid CDECL wine_alGenFilters(ALsizei n, ALuint* filters)
 {
     alGenFilters(n, filters);
 }
 
-static ALvoid CDECL wine_alDeleteFilters(ALsizei n, const ALuint* filters)
+ALvoid CDECL wine_alDeleteFilters(ALsizei n, const ALuint* filters)
 {
     alDeleteFilters(n, filters);
 }
 
-static ALboolean CDECL wine_alIsFilter(ALuint fid)
+ALboolean CDECL wine_alIsFilter(ALuint fid)
 {
     return alIsFilter(fid);
 }
 
-static ALvoid CDECL wine_alFilterf(ALuint fid, ALenum param, ALfloat value)
+ALvoid CDECL wine_alFilterf(ALuint fid, ALenum param, ALfloat value)
 {
     alFilterf(fid, param, value);
 }
 
-static ALvoid CDECL wine_alFilterfv(ALuint fid, ALenum param, const ALfloat* values)
+ALvoid CDECL wine_alFilterfv(ALuint fid, ALenum param, const ALfloat* values)
 {
     alFilterfv(fid, param, values);
 }
 
-static ALvoid CDECL wine_alFilteri(ALuint fid, ALenum param, ALint value)
+ALvoid CDECL wine_alFilteri(ALuint fid, ALenum param, ALint value)
 {
     alFilteri(fid, param, value);
 }
 
-static ALvoid CDECL wine_alFilteriv(ALuint fid, ALenum param, const ALint* values)
+ALvoid CDECL wine_alFilteriv(ALuint fid, ALenum param, const ALint* values)
 {
     alFilteriv(fid, param, values);
 }
 
-static ALvoid CDECL wine_alGetFilterf(ALuint fid, ALenum param, ALfloat* value)
+ALvoid CDECL wine_alGetFilterf(ALuint fid, ALenum param, ALfloat* value)
 {
     alGetFilterf(fid, param, value);
 }
 
-static ALvoid CDECL wine_alGetFilterfv(ALuint fid, ALenum param, ALfloat* values)
+ALvoid CDECL wine_alGetFilterfv(ALuint fid, ALenum param, ALfloat* values)
 {
     alGetFilterfv(fid, param, values);
 }
 
-static ALvoid CDECL wine_alGetFilteri(ALuint fid, ALenum param, ALint* value)
+ALvoid CDECL wine_alGetFilteri(ALuint fid, ALenum param, ALint* value)
 {
     alGetFilteri(fid, param, value);
 }
 
-static ALvoid CDECL wine_alGetFilteriv(ALuint fid, ALenum param, ALint* values)
+ALvoid CDECL wine_alGetFilteriv(ALuint fid, ALenum param, ALint* values)
 {
     alGetFilteriv(fid, param, values);
 }
 
 
-static ALvoid CDECL wine_alGenEffects(ALsizei n, ALuint* effects)
+ALvoid CDECL wine_alGenEffects(ALsizei n, ALuint* effects)
 {
     alGenEffects(n, effects);
 }
 
-static ALvoid CDECL wine_alDeleteEffects(ALsizei n, const ALuint* effects)
+ALvoid CDECL wine_alDeleteEffects(ALsizei n, const ALuint* effects)
 {
     alDeleteEffects(n, effects);
 }
 
-static ALboolean CDECL wine_alIsEffect(ALuint eid)
+ALboolean CDECL wine_alIsEffect(ALuint eid)
 {
     return alIsEffect(eid);
 }
 
-static ALvoid CDECL wine_alEffectf(ALuint eid, ALenum param, ALfloat value)
+ALvoid CDECL wine_alEffectf(ALuint eid, ALenum param, ALfloat value)
 {
     alEffectf(eid, param, value);
 }
 
-static ALvoid CDECL wine_alEffectfv(ALuint eid, ALenum param, const ALfloat* values)
+ALvoid CDECL wine_alEffectfv(ALuint eid, ALenum param, const ALfloat* values)
 {
     alEffectfv(eid, param, values);
 }
 
-static ALvoid CDECL wine_alEffecti(ALuint eid, ALenum param, ALint value)
+ALvoid CDECL wine_alEffecti(ALuint eid, ALenum param, ALint value)
 {
     alEffecti(eid, param, value);
 }
 
-static ALvoid CDECL wine_alEffectiv(ALuint eid, ALenum param, const ALint* values)
+ALvoid CDECL wine_alEffectiv(ALuint eid, ALenum param, const ALint* values)
 {
     alEffectiv(eid, param, values);
 }
 
-static ALvoid CDECL wine_alGetEffectf(ALuint eid, ALenum param, ALfloat* value)
+ALvoid CDECL wine_alGetEffectf(ALuint eid, ALenum param, ALfloat* value)
 {
     alGetEffectf(eid, param, value);
 }
 
-static ALvoid CDECL wine_alGetEffectfv(ALuint eid, ALenum param, ALfloat* values)
+ALvoid CDECL wine_alGetEffectfv(ALuint eid, ALenum param, ALfloat* values)
 {
     alGetEffectfv(eid, param, values);
 }
 
-static ALvoid CDECL wine_alGetEffecti(ALuint eid, ALenum param, ALint* value)
+ALvoid CDECL wine_alGetEffecti(ALuint eid, ALenum param, ALint* value)
 {
     alGetEffecti(eid, param, value);
 }
 
-static ALvoid CDECL wine_alGetEffectiv(ALuint eid, ALenum param, ALint* values)
+ALvoid CDECL wine_alGetEffectiv(ALuint eid, ALenum param, ALint* values)
 {
     alGetEffectiv(eid, param, values);
 }
diff --git a/dlls/openal32/openal32.spec b/dlls/openal32/openal32.spec
index 0094fc2..b5f7b8a 100644
--- a/dlls/openal32/openal32.spec
+++ b/dlls/openal32/openal32.spec
@@ -95,3 +95,26 @@
 @ cdecl alGetBuffer3f(long long ptr ptr ptr) wine_alGetBuffer3f
 @ cdecl alGetBuffer3i(long long ptr ptr ptr) wine_alGetBuffer3i
 @ cdecl alSpeedOfSound(long) wine_alSpeedOfSound
+# OpenAL EFX extension
+@ cdecl alGenFilters(long ptr) wine_alGenFilters
+@ cdecl alDeleteFilters(long ptr) wine_alDeleteFilters
+@ cdecl alIsFilter(long) wine_alIsFilter
+@ cdecl alFilterf(long long float) wine_alFilterf
+@ cdecl alFilterfv(long long ptr) wine_alFilterfv
+@ cdecl alFilteri(long long long) wine_alFilteri
+@ cdecl alFilteriv(long long ptr) wine_alFilteriv
+@ cdecl alGetFilterf(long long ptr) wine_alGetFilterf
+@ cdecl alGetFilterfv(long long ptr) wine_alGetFilterfv
+@ cdecl alGetFilteri(long long ptr) wine_alGetFilteri
+@ cdecl alGetFilteriv(long long ptr) wine_alGetFilteriv
+@ cdecl alGenEffects(long ptr) wine_alGenEffects
+@ cdecl alDeleteEffects(long ptr) wine_alDeleteEffects
+@ cdecl alIsEffect(long) wine_alIsEffect
+@ cdecl alEffectf(long long float) wine_alEffectf
+@ cdecl alEffectfv(long long ptr) wine_alEffectfv
+@ cdecl alEffecti(long long long) wine_alEffecti
+@ cdecl alEffectiv(long long ptr) wine_alEffectiv
+@ cdecl alGetEffectf(long long ptr) wine_alGetEffectf
+@ cdecl alGetEffectfv(long long ptr) wine_alGetEffectfv
+@ cdecl alGetEffecti(long long ptr) wine_alGetEffecti
+@ cdecl alGetEffectiv(long long ptr) wine_alGetEffectiv
-- 
2.4.5

